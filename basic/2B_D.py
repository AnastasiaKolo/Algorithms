# В атриуме нового корпуса ФНК урбанисты установили модные
# гранитные лавочки (на которых холодно сидеть зимой и жарко
# летом). Лавочка устроена следующим образом: несколько
# одинаковых кубических гранитных блоков ставятся в ряд, а
# на них кладется гранитная плита.
#
# При этом блоки располагаются так, чтобы плита не падала:
# для этого достаточно, чтобы и слева, и справа от центра плиты
# был хотя бы один гранитный блок или его часть (в частности,
# если центр плиты приходится на середину какого-нибудь блока,
# то и слева, и справа от центра плиты находится часть блока,
# и плита не падает).
#
# На ФНК много певокурсников (но это только пока не произошли
# отчисления за списывания на курсе ОиМП) и им не хватает
# стульев в аудиториях. Студенты обнаружили, что блоки можно
# использовать в аудитории в качестве сиденья. Можно по одному
# вытаскивать блоки, находящиеся с краю (как слева, так и справа).
# Они хотят вытащить из-под лавочки как можно больше блоков так,
# чтобы она при этом не упала (передвигать оставшиеся блоки
# нельзя). Определите, какие блоки они должны оставить.
#
# Формат ввода
# В первой строке входных данных содержатся два числа: L -
# длина лавочки и K - количество гранитных блоков-ножек. Оба
# числа натуральные и не превышают 10 000.
#
# Во второй строке следуют K различных целых неотрицательных
# чисел, задающих положение каждой ножки. Положение ножки
# определяется расстоянием от левого края плиты до левого
# края ножки (ножка - это куб размером 1×1×1). Ножки перечислены
# слева направо (то есть начиная с ножки с меньшим расстоянием
# до левого края).
#
# Формат вывода
# Требуется перечислить ножки, которые студентам нужно оставить.
# Для каждой ножки нужно выдать ее положение, как оно задано
# во входных данных. Ножки следует перечислять слева направо,
# в том порядке, в котором они встречаются во входных данных.

def remove_legs(a, l, k):
    left_center = l // 2 + l % 2 - 1
    right_center = l - l // 2 - l % 2
    left_leg = -1
    right_leg = -1
    legs = []
    # идем слева направо и ищем ножки которые надо оставить
    for i in range(k):
        if (a[i] <= left_center):
            left_leg = a[i]
        if (a[i] >= right_center) and (right_leg == -1):
            right_leg = a[i]
    # убираем из массива ножки которые не оставляем:
    if left_leg != -1:
        legs.append(left_leg)
    if (right_leg != -1) and (right_leg != left_leg):
        legs.append(right_leg)
    return legs


L, K = map(int, input().split())
bench = list(map(int, input().strip().split()))[:K]
result = remove_legs(bench, L, K)
print(' '.join(str(e) for e in result))